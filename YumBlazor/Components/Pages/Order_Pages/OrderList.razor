@page "/order/list"
@using System.Security.Claims
@inject IOrderRepository _orderRepository

@if (IsProcessing)
{
    <div class="position-absolute w-100 h-100 d-flex flex-column align-items-center bg-white justify-content-center"
         style="min-height:600px;">
        <img src="/images/loading.gif" alt="loading" />
    </div>
}
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Order List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
           
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<OrderHeader>? _orderHeaders = null;
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationState { get; set; }
    private bool? IsAdmin { get; set; }
    private string? UserId { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
           // await LoadOrderHeaders();
            IsProcessing = false;
            StateHasChanged();
        }
        //return base.OnAfterRenderAsync(firstRender);
    }

    // private async Task LoadOrderHeaders()
    // {
    //     IsProcessing = true;
    //     StateHasChanged();
       
    //     await CheckAuthorization();

    //     var userId = UserId;

    //     _orderHeaders = await _orderRepository.GetAllAsync();
    //     IsProcessing = false;
    // }

    // private async Task CheckAuthorization()
    // {
    //     if (AuthenticationState is not null)
    //     {
    //         var authState = await AuthenticationState;
    //         var user = authState?.User;

    //         IsAdmin = user?.IsInRole("ADMIN");
    //         UserId = user?.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    //     }
    // }
}
